<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ylife.order.mapper.BackOrderGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.ylife.order.model.BackOrderGoods" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="backorder_id" property="backorderId" jdbcType="BIGINT" />
    <result column="goods_info_id" property="goodsInfoId" jdbcType="BIGINT" />
    <result column="goods_num" property="goodsNum" jdbcType="INTEGER" />
    <result column="goods_price" property="goodsPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, backorder_id, goods_info_id, goods_num, goods_price
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from np_back_order_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from np_back_order_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ylife.order.model.BackOrderGoods" >
    insert into np_back_order_goods (id, backorder_id, goods_info_id, 
      goods_num, goods_price)
    values (#{id,jdbcType=BIGINT}, #{backorderId,jdbcType=BIGINT}, #{goodsInfoId,jdbcType=BIGINT}, 
      #{goodsNum,jdbcType=INTEGER}, #{goodsPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ylife.order.model.BackOrderGoods" >
    insert into np_back_order_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="backorderId != null" >
        backorder_id,
      </if>
      <if test="goodsInfoId != null" >
        goods_info_id,
      </if>
      <if test="goodsNum != null" >
        goods_num,
      </if>
      <if test="goodsPrice != null" >
        goods_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="backorderId != null" >
        #{backorderId,jdbcType=BIGINT},
      </if>
      <if test="goodsInfoId != null" >
        #{goodsInfoId,jdbcType=BIGINT},
      </if>
      <if test="goodsNum != null" >
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null" >
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylife.order.model.BackOrderGoods" >
    update np_back_order_goods
    <set >
      <if test="backorderId != null" >
        backorder_id = #{backorderId,jdbcType=BIGINT},
      </if>
      <if test="goodsInfoId != null" >
        goods_info_id = #{goodsInfoId,jdbcType=BIGINT},
      </if>
      <if test="goodsNum != null" >
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null" >
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylife.order.model.BackOrderGoods" >
    update np_back_order_goods
    set backorder_id = #{backorderId,jdbcType=BIGINT},
      goods_info_id = #{goodsInfoId,jdbcType=BIGINT},
      goods_num = #{goodsNum,jdbcType=INTEGER},
      goods_price = #{goodsPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>